/* =============================================================================

    SETTINGS CSS
    Property of Norex
    Authored by Josh Beveridge and Justin Bellefontaine

============================================================================= */

/* Dynamic Copy ============================================================= */

/* Point Copy System */
@media screen {
    html,
    body {
        font-size: 14pt;
    }
}
@media screen and (min-width: 768px) {
    html,
    body {
        font-size: 16pt;
    }
}

/* Orientations */
/*@media screen and (orientation:portrait) {html, body {font-size: 3vw;}}*/
/*@media screen and (orientation:landscape) {html, body {font-size: 1.8vw;}}*/

/* Widths */
/*@media screen and (max-width:40em) {html, body {font-size: 5vw;}}*/
/*@media screen and (min-width:90em) {html, body {font-size: 1.1vw;}}*/

/* Sections ================================================================= */
* {
    box-sizing: border-box;
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
}

html,
body {
    margin: 0;
}

section {
    display: block;
    margin: 0;
    padding: 1rem 0;
    position: relative;
    width: 100%;
}

.container {
    display: block;
    margin: 0 auto;
    max-width: 85%;
    width: 30rem;
}

/* Elements ================================================================= */
img,
iframe {
    max-width: 100%;
}

/* Media ==================================================================== */
.portrait {
    display: block !important;

    @media screen and (orientation:landscape) {
        display: none !important;
    }

}

.landscape {
    display: none !important;

    @media screen and (orientation:landscape) {
        display: block !important;
    }

}

/* Wrappers ================================================================= */
.wrapper {
    display: block;
    position: relative;

    &.center {
        position: absolute;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
    }

}

/* Inline Layout ============================================================ */
.inline-layout {
    line-height: 1;
    margin: 0;
    padding: 0;

    dt {
        display: none;
    }

    dd {
        margin: 0;
        padding: 0;
        display: inline-block;
        vertical-align: middle;
    }

    &.justify {
        text-align: justify;
        font-size: 1px;
        font-size: 0;

        dd {
            font-size: 1rem;
        }

        dl {
            text-align: left;

            &.justify {
                text-align: justify;
            }

        }

        &:after {
            content: '';
            display: inline-block;
            width: 100%;
            height: 0;
            font-size: 0;
            line-height: 0;
        }

    }

}

/* Buttons ================================================================== */
button {
    border: none;
}

/* == Block Grid ============================================================ */
$pseudo-grid-spacing: 40px;

.block-grid {
    font-size: 0;

    > dd {
        vertical-align: top;
        margin: 1rem 0;
        font-size: 1rem;

        &.full-wide {
            padding: 0 !important;
        }

    }

    /* One up */
    &.one-wide {
        width: 100%;

        > dd {
            width: 100%;
        }

    }

    /* Two up */
    &.two-wide {
        width: 100%;

        > dd {
            width: 100%;

            @media screen and (min-width: 40em) {
                width: 50%;
                padding: 0 $pseudo-grid-spacing 0 0;

                &:nth-child(2n+2) {
                    padding: 0 0 0 $pseudo-grid-spacing;
                }

            }

        }

    }

    /* Three up */
    &.three-wide {
        width: 100%;

        > dd {
            width: 100%;

            @media screen and (min-width: 40em) {
                width: 32.8%;
                padding: 0 calc($pseudo-grid-spacing / 2);

                &:nth-child(3n) {
                    padding: 0 0 0 $pseudo-grid-spacing;
                }

                &:nth-child(3n+1) {
                    padding: 0 $pseudo-grid-spacing 0 0;
                }

            }

        }

    }

    /* Four up */
    &.four-wide {
        width: 100%;

        > dd {
            width: 100%;

            @media and screen and (40em) and (max-width: 70em) {
                width: 50%;
                padding: 0 $pseudo-grid-spacing 0 0;

                &:nth-child(2n+2) {
                    padding: 0 0 0 $pseudo-grid-spacing;
                }

            }

            @media screen and (min-width: 70em) {
                width: 24.5%;
                padding: 0 calc($pseudo-grid-spacing / 2);

                &:nth-child(4n) {
                    padding: 0 0 0 $pseudo-grid-spacing;
                }

                &:nth-child(4n+1) {
                    padding: 0 $pseudo-grid-spacing 0 0;
                }

            }

        }

    }

}

/* == Block Grid Within Forms =============================================== */
form {

    .block-grid {

        /* Two up */
        &.two-wide {

            > dd {

                @media screen and (min-width: 40em) {
                    padding: 0 calc($pseudo-grid-spacing / 2) 0 0;

                    /* Last item in each row */
                    &:nth-child(2n+2) {
                        padding: 0 0 0 calc($pseudo-grid-spacing / 2);
                    }

                }

            }

        }

        /* Three up */
        &.three-wide {

            > dd {

                @media screen and (min-width: 40em) {
                    padding: 0 calc($pseudo-grid-spacing / 2);

                    /* Last item in each row */
                    &:nth-child(3n) {
                        padding: 0 0 0 calc($pseudo-grid-spacing / 2);
                    }

                    /* First item in each row */
                    &:nth-child(3n+1) {
                        padding: 0 calc($pseudo-grid-spacing / 2) 0 0;
                    }

                }

            }

        }

        /* Four up */
        &.four-wide {

            > dd {

                @media and screen and (40em) and (max-width: 70em) {
                    padding: 0 $pseudo-grid-spacing 0 0;

                    /* Last item in each row */
                    &:nth-child(2n+2) {
                        padding: 0 0 0 $pseudo-grid-spacing;
                    }

                }

                @media screen and (min-width: 70em) {
                    padding: 0 calc($pseudo-grid-spacing / 2) 0 $pseudo-grid-spacing / 2);

                    /* Last item in each row */
                    &:nth-child(4n) {
                        padding: 0 0 0 $pseudo-grid-spacing;
                    }

                    /* First item in each row */
                    &:nth-child(4n+1) {
                        padding: 0 $pseudo-grid-spacing 0 0;
                    }

                }

            }

        }

    }

}

/* == Helper Classes ======================================================== */
.full-wide {
    width: 100% !important;
}
